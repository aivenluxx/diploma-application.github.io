{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\diploma-application\\\\my-app\\\\src\\\\components\\\\MainPage\\\\Speedometer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../../styles/MainPage/Speedometer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Speedometer = () => {\n  _s();\n  const [speed, setSpeed] = useState(0); // в km/h\n  const [isAnalog, setIsAnalog] = useState(true);\n  const [unit, setUnit] = useState('kph');\n  const watchId = useRef(null);\n  const prevPos = useRef(null);\n  const getSpeedInUnit = () => {\n    switch (unit) {\n      case 'mps':\n        return (speed / 3.6).toFixed(2);\n      // km/h -> m/s\n      case 'mph':\n        return (speed * 0.621371).toFixed(2);\n      // km/h -> mph\n      default:\n        return speed.toFixed(2);\n    }\n  };\n  const accelerate = () => {\n    setSpeed(prevSpeed => Math.min(prevSpeed + 10, 330));\n  };\n  const decelerate = () => {\n    setSpeed(prevSpeed => Math.max(prevSpeed - 10, 0));\n  };\n  const toggleSpeedometerType = () => {\n    setIsAnalog(!isAnalog);\n  };\n  const changeUnit = newUnit => {\n    setUnit(newUnit);\n  };\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    // Формула гаверсинуса для расстояния между двумя точками на земном шаре (в метрах)\n    const toRad = val => val * Math.PI / 180;\n    const R = 6371000; // радиус Земли в метрах\n    const dLat = toRad(lat2 - lat1);\n    const dLon = toRad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // в метрах\n  };\n  const startTracking = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by your browser');\n      return;\n    }\n    if (watchId.current !== null) {\n      // Если уже отслеживаем — перестать\n      navigator.geolocation.clearWatch(watchId.current);\n      watchId.current = null;\n      setSpeed(0);\n      prevPos.current = null;\n      return;\n    }\n    watchId.current = navigator.geolocation.watchPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const currentTime = position.timestamp;\n      if (prevPos.current) {\n        const {\n          latitude: prevLat,\n          longitude: prevLon,\n          time: prevTime\n        } = prevPos.current;\n        const dist = calculateDistance(prevLat, prevLon, latitude, longitude); // в метрах\n        const timeElapsed = (currentTime - prevTime) / 1000; // в секундах\n\n        if (timeElapsed > 0) {\n          const speedMps = dist / timeElapsed; // скорость в м/с\n          const speedKph = speedMps * 3.6; // скорость в км/ч\n          setSpeed(speedKph);\n        }\n      }\n      prevPos.current = {\n        latitude,\n        longitude,\n        time: currentTime\n      };\n    }, error => {\n      console.error('Error getting position:', error);\n      alert('Ошибка получения геолокации');\n    }, {\n      enableHighAccuracy: true,\n      maximumAge: 1000,\n      timeout: 5000\n    });\n  };\n\n  // Очистка при размонтировании\n  useEffect(() => {\n    return () => {\n      if (watchId.current !== null) {\n        navigator.geolocation.clearWatch(watchId.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speedometer-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleSpeedometerType,\n            children: isAnalog ? 'Digital' : 'Analog'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speedometer-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speedometer-unit-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speedometer-display\",\n              children: isAnalog ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"analog-speedometer\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://habrastorage.org/r/w1560/getpro/habr/post_images/c3c/9a8/456/c3c9a8456303a4f574b2b14dc4c8d499.png\",\n                  alt: \"speedometer dial\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"speedometer-needle\",\n                  style: {\n                    transform: `rotate(${speed * 0.642857}deg)`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"digital-speedometer\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [getSpeedInUnit(), \" \", unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n              className: \"unit-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeUnit('mps'),\n                children: \"m/s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeUnit('mph'),\n                children: \"mph\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeUnit('kph'),\n                children: \"km/h\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"speed-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speed-control-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: accelerate,\n              children: \"Accelerate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: decelerate,\n              children: \"Decelerate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-button\",\n            onClick: startTracking,\n            children: watchId.current === null ? 'Start' : 'Stop'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Speedometer, \"ZOBoo+drD/5XLzVDpREwOL3/Yhk=\");\n_c = Speedometer;\nexport default Speedometer;\nvar _c;\n$RefreshReg$(_c, \"Speedometer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Speedometer","_s","speed","setSpeed","isAnalog","setIsAnalog","unit","setUnit","watchId","prevPos","getSpeedInUnit","toFixed","accelerate","prevSpeed","Math","min","decelerate","max","toggleSpeedometerType","changeUnit","newUnit","calculateDistance","lat1","lon1","lat2","lon2","toRad","val","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","startTracking","navigator","geolocation","alert","current","clearWatch","watchPosition","position","latitude","longitude","coords","currentTime","timestamp","prevLat","prevLon","time","prevTime","dist","timeElapsed","speedMps","speedKph","error","console","enableHighAccuracy","maximumAge","timeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","transform","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/diploma-application/my-app/src/components/MainPage/Speedometer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../../styles/MainPage/Speedometer.css';\r\n\r\nconst Speedometer = () => {\r\n  const [speed, setSpeed] = useState(0); // в km/h\r\n  const [isAnalog, setIsAnalog] = useState(true);\r\n  const [unit, setUnit] = useState('kph');\r\n  const watchId = useRef(null);\r\n  const prevPos = useRef(null);\r\n\r\n  const getSpeedInUnit = () => {\r\n    switch (unit) {\r\n      case 'mps':\r\n        return (speed / 3.6).toFixed(2); // km/h -> m/s\r\n      case 'mph':\r\n        return (speed * 0.621371).toFixed(2); // km/h -> mph\r\n      default:\r\n        return speed.toFixed(2);\r\n    }\r\n  };\r\n\r\n  const accelerate = () => {\r\n    setSpeed((prevSpeed) => Math.min(prevSpeed + 10, 330));\r\n  };\r\n\r\n  const decelerate = () => {\r\n    setSpeed((prevSpeed) => Math.max(prevSpeed - 10, 0));\r\n  };\r\n\r\n  const toggleSpeedometerType = () => {\r\n    setIsAnalog(!isAnalog);\r\n  };\r\n\r\n  const changeUnit = (newUnit) => {\r\n    setUnit(newUnit);\r\n  };\r\n\r\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\r\n    // Формула гаверсинуса для расстояния между двумя точками на земном шаре (в метрах)\r\n    const toRad = (val) => (val * Math.PI) / 180;\r\n    const R = 6371000; // радиус Земли в метрах\r\n    const dLat = toRad(lat2 - lat1);\r\n    const dLon = toRad(lon2 - lon1);\r\n    const a =\r\n      Math.sin(dLat / 2) ** 2 +\r\n      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c; // в метрах\r\n  };\r\n\r\n  const startTracking = () => {\r\n    if (!navigator.geolocation) {\r\n      alert('Geolocation is not supported by your browser');\r\n      return;\r\n    }\r\n\r\n    if (watchId.current !== null) {\r\n      // Если уже отслеживаем — перестать\r\n      navigator.geolocation.clearWatch(watchId.current);\r\n      watchId.current = null;\r\n      setSpeed(0);\r\n      prevPos.current = null;\r\n      return;\r\n    }\r\n\r\n    watchId.current = navigator.geolocation.watchPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        const currentTime = position.timestamp;\r\n\r\n        if (prevPos.current) {\r\n          const { latitude: prevLat, longitude: prevLon, time: prevTime } = prevPos.current;\r\n\r\n          const dist = calculateDistance(prevLat, prevLon, latitude, longitude); // в метрах\r\n          const timeElapsed = (currentTime - prevTime) / 1000; // в секундах\r\n\r\n          if (timeElapsed > 0) {\r\n            const speedMps = dist / timeElapsed; // скорость в м/с\r\n            const speedKph = speedMps * 3.6; // скорость в км/ч\r\n            setSpeed(speedKph);\r\n          }\r\n        }\r\n\r\n        prevPos.current = { latitude, longitude, time: currentTime };\r\n      },\r\n      (error) => {\r\n        console.error('Error getting position:', error);\r\n        alert('Ошибка получения геолокации');\r\n      },\r\n      { enableHighAccuracy: true, maximumAge: 1000, timeout: 5000 }\r\n    );\r\n  };\r\n\r\n  // Очистка при размонтировании\r\n  useEffect(() => {\r\n    return () => {\r\n      if (watchId.current !== null) {\r\n        navigator.geolocation.clearWatch(watchId.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <main className=\"content\">\r\n        <div className=\"speedometer-section\">\r\n          <div className=\"toggle-buttons\">\r\n            <button onClick={toggleSpeedometerType}>\r\n              {isAnalog ? 'Digital' : 'Analog'}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"speedometer-container\">\r\n            <div className=\"speedometer-unit-wrapper\">\r\n              <div className=\"speedometer-display\">\r\n                {isAnalog ? (\r\n                  <div className=\"analog-speedometer\">\r\n                    <img\r\n                      src=\"https://habrastorage.org/r/w1560/getpro/habr/post_images/c3c/9a8/456/c3c9a8456303a4f574b2b14dc4c8d499.png\"\r\n                      alt=\"speedometer dial\"\r\n                    />\r\n                    <div\r\n                      className=\"speedometer-needle\"\r\n                      style={{\r\n                        transform: `rotate(${speed * 0.642857}deg)`,\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"digital-speedometer\">\r\n                    <p>\r\n                      {getSpeedInUnit()} {unit}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <aside className=\"unit-selector\">\r\n                <button onClick={() => changeUnit('mps')}>m/s</button>\r\n                <button onClick={() => changeUnit('mph')}>mph</button>\r\n                <button onClick={() => changeUnit('kph')}>km/h</button>\r\n              </aside>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"speed-controls\">\r\n            <div className=\"speed-control-buttons\">\r\n              <button onClick={accelerate}>Accelerate</button>\r\n              <button onClick={decelerate}>Decelerate</button>\r\n            </div>\r\n            <button className=\"start-button\" onClick={startTracking}>\r\n              {watchId.current === null ? 'Start' : 'Stop'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Speedometer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}