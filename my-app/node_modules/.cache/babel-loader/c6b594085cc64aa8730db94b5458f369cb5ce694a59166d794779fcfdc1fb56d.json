{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\diploma-application\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { HeadProvider } from 'react-head';\n\n// index.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst app = express();\nconst port = 3000;\n\n// Подключение к MongoDB\nmongoose.connect('mongodb://localhost:27017/mydatabase', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('✅ Подключено к MongoDB')).catch(err => console.error('❌ Ошибка подключения:', err));\n\n// Пример маршрута\napp.get('/', (req, res) => {\n  res.send('Привет, MongoDB!');\n});\napp.listen(port, () => {\n  console.log(`🚀 Сервер запущен на http://localhost:${port}`);\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(HeadProvider, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","App","HeadProvider","jsxDEV","_jsxDEV","express","require","mongoose","app","port","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","error","get","req","res","send","listen","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/User/Documents/GitHub/diploma-application/my-app/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App';\r\nimport { HeadProvider } from 'react-head';\r\n\r\n// index.js\r\nconst express = require('express');\r\nconst mongoose = require('mongoose');\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// Подключение к MongoDB\r\nmongoose.connect('mongodb://localhost:27017/mydatabase', {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n})\r\n.then(() => console.log('✅ Подключено к MongoDB'))\r\n.catch(err => console.error('❌ Ошибка подключения:', err));\r\n\r\n// Пример маршрута\r\napp.get('/', (req, res) => {\r\n  res.send('Привет, MongoDB!');\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`🚀 Сервер запущен на http://localhost:${port}`);\r\n});\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <HeadProvider>\r\n    <App />\r\n    </HeadProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,YAAY,QAAQ,YAAY;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAME,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAG,IAAI;;AAEjB;AACAF,QAAQ,CAACG,OAAO,CAAC,sCAAsC,EAAE;EACvDC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAAC,CACjDC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAED,GAAG,CAAC,CAAC;;AAE1D;AACAT,GAAG,CAACW,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,kBAAkB,CAAC;AAC9B,CAAC,CAAC;AAEFd,GAAG,CAACe,MAAM,CAACd,IAAI,EAAE,MAAM;EACrBK,OAAO,CAACC,GAAG,CAAC,yCAAyCN,IAAI,EAAE,CAAC;AAC9D,CAAC,CAAC;AAGF,MAAMe,IAAI,GAAGzB,QAAQ,CAAC0B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTxB,OAAA,CAACN,KAAK,CAAC+B,UAAU;EAAAC,QAAA,eACf1B,OAAA,CAACJ,aAAa;IAAA8B,QAAA,eACd1B,OAAA,CAACF,YAAY;MAAA4B,QAAA,eACb1B,OAAA,CAACH,GAAG;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}